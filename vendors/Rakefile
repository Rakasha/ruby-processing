require 'rake/clean'

JRUBY_VERSION      = "1.6.7"
PROCESSING_VERSION = "1.5.1"

CLOBBER.include("processing-#{PROCESSING_VERSION}-windows-expert.zip", "jruby-complete-#{JRUBY_VERSION}.jar")

desc "download, sign and copy to ruby-processing"
task :default => [:download, :signjar, :copy]

desc "download Processing & JRuby upstream sources"
task :download => ["processing-#{PROCESSING_VERSION}-windows-expert.zip", "jruby-complete-#{JRUBY_VERSION}.jar"]

# taking this version is because this is the smallest build available with all the librairies we need
file "processing-#{PROCESSING_VERSION}-windows-expert.zip" do
  # /home/moumar/src/processing-#{PROCESSING_VERSION}/build/linux/work/modes/java/libraries
  sh "wget http://processing.googlecode.com/files/processing-#{PROCESSING_VERSION}-windows-expert.zip"
  check_sha1("processing-#{PROCESSING_VERSION}-windows-expert.zip", "d3044e07c34b6eda2360987d67faf8c1cd687ffa")
  #unzip -o /home/moumar/src/processing-#{PROCESSING_VERSION}-windows-expert.zip 'processing-#{PROCESSING_VERSION}/modes/java/libraries/opengl/library/*' 'processing-#{PROCESSING_VERSION}/modes/java/libraries/minim/library/*'"
end

file "jruby-complete-#{JRUBY_VERSION}.jar" do
  sh "wget http://jruby.org.s3.amazonaws.com/downloads/#{JRUBY_VERSION}/jruby-complete-#{JRUBY_VERSION}.jar"
  check_sha1("jruby-complete-#{JRUBY_VERSION}.jar", "455e6a0a0068fbcc52e8f419c8a40fa8bca68a2f")
end

task :signjar => "jruby-complete-#{JRUBY_VERSION}.jar" do
  unless `jarsigner -verify jruby-complete-#{JRUBY_VERSION}.jar`.chop == "jar verified."
    sh "cat ~/.keystore_pass | jarsigner jruby-complete-#{JRUBY_VERSION}.jar ruby-processing"
  end
end

directory "../lib/core"

desc "copy libs & jars"
task :copy => ["../lib/core", :signjar ] do
  sh "cp -v jruby-complete-#{JRUBY_VERSION}.jar ../lib/core/jruby-complete.jar"

  processing_zip = File.expand_path("processing-#{PROCESSING_VERSION}-windows-expert.zip")
  sh "cd ../lib/core && unzip -qoj #{processing_zip} processing-#{PROCESSING_VERSION}/lib/core.jar"

  dirs = %w{dxf javascript minim net opengl pdf serial video}
  Dir.chdir("../library/") do
    sh "rm -rf processing-#{PROCESSING_VERSION}/ #{dirs.join(" ")}"
    inside_zip_dirs = dirs.collect { |d| "processing-#{PROCESSING_VERSION}/modes/java/libraries/#{d}/library/*" }
    sh "unzip -q #{processing_zip} #{inside_zip_dirs.join(" ")}"
    sh "mv processing-#{PROCESSING_VERSION}/modes/java/libraries/* ."
    sh "rm -r processing-#{PROCESSING_VERSION}/"
  end
end

def check_sha1(filename, expected_hash)
  require "digest/sha1"
  sha1 = Digest::SHA1.new
  File.open(filename, "r") do |f|
    while buf = f.read(4096)
      sha1.update(buf)
    end
  end
  if sha1.hexdigest != expected_hash
    raise "bad sha1 checksum for #{filename} (expected #{expected_hash} got #{sha1.hexdigest})"
  end
end
